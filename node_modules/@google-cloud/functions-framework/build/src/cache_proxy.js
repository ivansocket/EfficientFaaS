let cacheProvider = require('../../../../../cache-provider')
const propertyAccessTest = require("../../../../../ConfigurationFile.json")
const imageThumbnail = require('image-thumbnail');

// The default connection case, is to a redis local instance, if no cachingService is defined 
async function ConnectCache(req, cachingService) {
    if (req.cachingClient == null) {

        switch(cachingService) {
            case "nodeLocal":
                 cacheProvider.start()
                 req.cachingClient = cacheProvider
              break;
            case "redisLocal":
                var redisClient = redis.createClient({});
                await redisClient.connect()
                req.cachingClient = redisClient
            case "redisRemote":
                var redisClient =   redis.createClient({
                    url: propertyAccessTest.redisRemoteConnectionString
                })
                await redisClient.connect()
                req.cachingClient = redisClient
              break;
            default:
                var redisClient = redis.createClient({});
                await redisClient.connect()
                req.cachingClient = redisClient
          }

        return req.cachingClient
    }
}

async function GetValueByKey(cachingService, req) {
    if(cachingService == "nodeLocal") {
       var cachedValue = cacheProvider.instance().get(req.hash_key)

       if (cachedValue == undefined) {
        return null
       }
       else {
        return cachedValue
       }
    }
    // cachingService == "nodeRedis", or other pre configured case. For this access, verify if the method to access the cache is get
    else{
        var redisCached = await req.cachingClient.get(req.hash_key)

        if (!redisCached) {
            return null
        }
        else {
            return redisCached
        }
    }
}

async function SetValue(cachingService, req) {

    let thumbnail

    if(cachingService == "nodeLocal") {
        thumbnail = await imageThumbnail(req.body[propertyAccessTest.property]);
        req.cachingClient.instance().set(req.hash_key, thumbnail, 1200)
    }
    // Case "nodeRedis" in Configurations File
    else {
        thumbnail = await imageThumbnail(req.body[propertyAccessTest.property]);
        await req.cachingClient.set(req.hash_key, thumbnail)
    }
}


module.exports.SetValue = SetValue;
module.exports.GetValueByKey = GetValueByKey;
module.exports.ConnectCache = ConnectCache;